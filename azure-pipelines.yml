trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  zapVersion: '2.16.1'
  zapFolder: 'zap'
  zapDownloadUrl: 'https://github.com/zaproxy/zaproxy/releases/download/v2.16.1/ZAP_2.16.1_Linux.tar.gz'
  reportName: 'zap_report.html'
  targetUrl: 'https://example.com'  # üîÅ Replace with your actual target

jobs:
- job: ZapScan
  displayName: 'Install and Run OWASP ZAP Without Docker'
  steps:
    - checkout: none

    - task: Bash@3
      displayName: 'Download and Extract OWASP ZAP'
      inputs:
        targetType: 'inline'
        script: |
          mkdir -p ${{ variables.zapFolder }}
          echo "Downloading ZAP from: ${{ variables.zapDownloadUrl }}"
          curl -L ${{ variables.zapDownloadUrl }} -o zap.tar.gz
          tar -xzf zap.tar.gz -C ${{ variables.zapFolder }}
          echo "Contents of ZAP directory:"
          ls -R ${{ variables.zapFolder }}

    - task: Bash@3
      displayName: 'Run ZAP Baseline Scan'
      inputs:
        targetType: 'inline'
        script: |
          echo "Looking for zap-baseline.jar..."
          ZAP_JAR=$(find ${{ variables.zapFolder }} -type f -name "zap-baseline.jar")

          if [ -z "$ZAP_JAR" ]; then
            echo "ERROR: zap-baseline.jar not found!"
            exit 1
          fi

          echo "Found JAR at: $ZAP_JAR"
          java -jar "$ZAP_JAR" \
            -t ${{ variables.targetUrl }} \
            -r ${{ variables.reportName }} \
            -I

    - task: PublishPipelineArtifact@1
      displayName: 'Publish ZAP Scan Report'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/${{ variables.reportName }}'
        artifactName: 'ZAP-Scan-Report'
