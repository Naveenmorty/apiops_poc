trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  zapVersion: '2.16.1'
  zapFolder: 'zap'
  reportName: 'zap_report.html'
  targetUrl: 'https://www.hackerrank.com/'  # üîÅ Change this to your real URL

jobs:
- job: ZapScan
  displayName: 'Install and Run OWASP ZAP (No Docker)'
  steps:
    - checkout: none

    - task: PowerShell@2
      displayName: 'Download and Install OWASP ZAP'
      inputs:
        targetType: 'inline'
        script: |
          $ErrorActionPreference = 'Stop'

          $zapUrl = "https://github.com/zaproxy/zaproxy/releases/download/v${env:zapVersion}/ZAP_2_16_1_windows.exe"
          $installerPath = "$env:Temp\zap_installer.exe"
          $installPath = "$(System.DefaultWorkingDirectory)\${env:zapFolder}"

          Write-Host "Downloading ZAP from $zapUrl..."
          Invoke-WebRequest -Uri $zapUrl -OutFile $installerPath

          Write-Host "Installing ZAP to $installPath..."
          Start-Process -FilePath $installerPath -ArgumentList "/S", "/D=$installPath" -Wait

    - task: PowerShell@2
      displayName: 'Run ZAP Baseline Scan'
      inputs:
        targetType: 'inline'
        script: |
          $zapJar = "$(System.DefaultWorkingDirectory)\${env:zapFolder}\zap-baseline.jar"
          $reportFile = "$(System.DefaultWorkingDirectory)\${env:reportName}"

          if (!(Test-Path $zapJar)) {
            $zapJar = Get-ChildItem "$(System.DefaultWorkingDirectory)\${env:zapFolder}" -Recurse -Filter "zap-baseline.jar" | Select-Object -First 1 | ForEach-Object { $_.FullName }
          }

          Write-Host "Running ZAP baseline scan..."
          & java -jar $zapJar -t $env:targetUrl -r $reportFile -I

    - task: PublishPipelineArtifact@1
      displayName: 'Publish ZAP Report'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)\$(reportName)'
        artifactName: 'ZAP-Scan-Report'
